<!doctype html>

<html>
<head>
	<title>DateFinder - Visualizer</title>	
	<meta charset="utf-8">

	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	

  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
      <![endif]-->        
      <link rel="stylesheet" type="text/css" href="css/bootstrap.css">
      <link rel="stylesheet" type="text/css" href="css/bootstrap-theme.css">
       <script src="https://code.jquery.com/jquery.js"></script>
      <script src="js/bootstrap.js"></script>

      <style>

      body {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        position: relative;
        width: 960px;
      }

      .axis text {
        font: 10px sans-serif;
      }

      .axis path,
      .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
      }

      .bar {
        fill: steelblue;
        fill-opacity: .9;
      }

      .x.axis path {
        display: none;
      }

      label {
        position: absolute;
        top: 10px;
        right: 10px;
      }

      </style>
    </head>

    <body>
      <div class="container" align="center">
        <h3>Breakdown of your Single Friends</h3>
      </div>
      <div class="col-md-9" role="main">
      <script src="js/d3.js" charset="utf-8"></script>
      <script>
      //d3 code, will be in commit 
      var margin = {top: 20, right: 20, bottom: 30, left: 40},
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;
    

      var x = d3.scale.ordinal()
      .rangeRoundBands([0, width], .1, 1);

      var y = d3.scale.linear()
      .range([height, 0]);

      var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom");

      var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left");

      var svg = d3.select("body").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

      d3.json('/visualize/d3', function(error, data) {
        x.domain(data.map(function(d) { return d.sex; }));
        y.domain([0, d3.max(data, function(d) { console.log(d.number); return d.number; })]);

        svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

        svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .append("text")
        .attr("transform", "rotate(-90)")
        .attr("y", 6)
        .attr("dy", ".71em")
        .style("text-anchor", "end")
        .text("Number");
        svg.selectAll(".bar")
        .data(data)
        .enter().append("rect")
        .attr("class", "bar")
        .attr("onclick", function(d){return "window.location='".concat(d.sex, "'");})
        .attr("x", function(d) { return x(d.sex); })
        .attr("width", x.rangeBand())
        .attr("y", function(d) { return y(d.number); })
        .attr("height", function(d) { return height - y(d.number); });
  


        d3.select("input").on("change", change);

        var sortTimeout = setTimeout(function() {
          d3.select("input").property("checked", true).each(change);
        }, 2000);

        function change() {
          clearTimeout(sortTimeout);

    // Copy-on-write since tweens are evaluated after a delay.
    var x0 = x.domain(data.sort(this.checked
      ? function(a, b) { return b.number - a.number; }
      : function(a, b) { return d3.ascending(a.sex, b.sex); })
    .map(function(d) { return d.sex; }))
    .copy();

    var transition = svg.transition().duration(750),
    delay = function(d, i) { return i * 50; };

    transition.selectAll(".bar")
    .delay(delay)
    .attr("x", function(d) { return x0(d.sex); });

    transition.select(".x.axis")
    .call(xAxis)
    .selectAll("g")
    .delay(delay);
  }
});

</script>
</div>
</body>
</html>
